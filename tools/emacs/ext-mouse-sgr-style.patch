--- ext-mouse.el.bak	2012-05-04 19:11:15.000000000 +0900
+++ ext-mouse.el	2012-05-04 22:55:52.000000000 +0900
@@ -59,12 +59,23 @@
 
 (defvar xterm-mouse-last)
 
+(defvar xterm-mouse-type "normal")
+
 ;; Mouse events symbols must have an 'event-kind property with
 ;; the value 'mouse-click.
 (dolist (event-type '(mouse-1 mouse-2 mouse-3
 			      M-down-mouse-1 M-down-mouse-2 M-down-mouse-3))
   (put event-type 'event-kind 'mouse-click))
 
+(defun parse-number (terminal-char n)
+  (let ((c (read-char)))
+    (cond ((and (> c #x2f) (< c #x3a))
+     (parse-number terminal-char 
+       (+ (* n 10) (- c #x30))))
+       ((= c terminal-char) n)
+       (t (princ c)))
+    ))
+
 (defun xterm-mouse-translate (event)
   "Convert XTerm mouse event to Emacs mouse event."
   ;; From the xterm control sequence spec:
@@ -85,6 +96,27 @@
     )
   )
 
+(defun xterm-mouse-translate-sgr (event)
+  "Convert XTerm mouse event to Emacs mouse event."
+
+  ;; From the xterm control sequence spec:
+  ;;
+  ;; Parameters (such as pointer position and button number) for all
+  ;; mouse tracking escape sequences generated by xterm encode numeric
+  ;; parameters in a single character as value+32. For example, !
+  ;; specifies the value 1. The upper left character position on the
+  ;; terminal is denoted as 1,1.
+  (let* ((type (- (parse-number #x3b 0) 32))
+	 (x (- (parse-number #x3b 0) 1))
+	 (y (- (parse-number #x4d 0) 1))
+	 (posn (xterm-mouse-posn x y))
+	 (event (xterm-mouse-event type posn "")))
+    (set-terminal-parameter nil 'xterm-mouse-x x)
+    (set-terminal-parameter nil 'xterm-mouse-y y)
+    (vector (setq last-input-event event))
+    )
+  )
+
 ;; These two variables have been converted to terminal parameters.
 ;;
 ;;(defvar xterm-mouse-x 0
@@ -311,8 +343,14 @@
     (unless (terminal-parameter terminal 'xterm-mouse-mode)
       ;; Simulate selecting a terminal by selecting one of its frames ;-(
       (with-selected-frame (car (frames-on-display-list terminal))
-        (define-key input-decode-map "\e[M" 'xterm-mouse-translate))
+       (cond ((string= xterm-mouse-type 'sgr) 
+              (define-key input-decode-map "\e[<" 'xterm-mouse-translate-sgr))
+             (t 
+              (define-key input-decode-map "\e[M" 'xterm-mouse-translate))
+             ))
       (set-terminal-parameter terminal 'xterm-mouse-mode t))
+    (if (string= xterm-mouse-type 'sgr)
+        (send-string-to-terminal "\e[?1006h" terminal))
     (send-string-to-terminal "\e[?1002h" terminal)))
 
 (defun turn-off-xterm-mouse-tracking-on-terminal (terminal)
@@ -329,6 +367,8 @@
     ;; command too many times (or to catch an unintended key sequence), than
     ;; to send it too few times (or to fail to let xterm-mouse events
     ;; pass by untranslated).
+    (if (string= xterm-mouse-type 'sgr)
+        (send-string-to-terminal "\e[?1006h" terminal))
     (send-string-to-terminal "\e[?1002l" terminal)))
 
 (provide 'ext-mouse)
