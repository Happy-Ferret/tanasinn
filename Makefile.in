
MODULENAME=@PACKAGE_NAME@
ID=@PACKAGE_BUGREPORT@
XPI=$(ID).xpi
JS=@TANASINN_JS_PATH@ 
ZIP=@ZIP@
TPUT=@TPUT@
ASCIIDOC=@ASCIIDOC@
RM=rm -f

##ifeq ($(TPUT), )
#MSTART=
#MEND=
#ESTART=
#EEND=
##else
MSTART="$$($(TPUT) setaf 2)====================\>$$($(TPUT) setaf 6)"
MEND="$$($(TPUT) sgr0)"
ESTART="$$($(TPUT) bold; $(TPUT) setaf 1)"
EEND="$$($(TPUT) sgr0; $(TPUT) setaf 6)"
##endif

all: $(XPI) tanasinn-docs.zip

tanasinn-docs.zip: doc/usermanual.html
	@echo "$(MSTART) Create documentation package....$(MEND)" 
	$(RM) $@
	cd doc && $(ZIP) ../$@ *.html images/*.png
	@echo "$(MSTART) Done.$(MEND)" 

Makefile: Makefile.in configure
	@echo "$(MSTART) Regenerating Makefile....$(MEND)" 
	./configure
	@echo "$(MSTART) Done.$(MEND)" 

configure: configure.ac acgecko.m4 acplatform.m4
	@echo "$(MSTART) Regenerating configure file....$(MEND)" 
	autoconf
	@echo "$(MSTART) Done.$(MEND)" 

modules/config.js: modules/config.js.in configure
	./configure

chrome.manifest: chrome.manifest.in configure
	./configure

install.rdf: install.rdf.in configure
	./configure

content-build:
	$(MAKE) -C chrome/content

document-build: doc/usermanual.html

doc/usermanual.html: doc/usermanual.txt
	@echo "$(MSTART) Regenerating configure file....$(MEND)" 
	@echo Generating user manual.
	$(MAKE) -C doc
	@echo "$(MSTART) Done.$(MEND)" 

modules-build:
	$(MAKE) -C modules

.PHONY: modules-build content-build document-build lint

$(XPI): lint chrome.manifest install.rdf tanasinn-docs.zip
	@echo "$(MSTART) Make xpi package....$(MEND)" 
	$(RM) $@
	$(ZIP) $@ install.rdf \
		bootstrap.js \
		content/* \
		modules/*.js \
		modules/*.py \
		modules/*.conf \
		modules/common/*.js \
		modules/locale/*.js \
		modules/core/*.js \
		modules/base/*.js \
		modules/autoload/*.js \
		modules/plugin/*.js \
		| sed -e "s/\(adding:\) \([^(]*\)(deflated \([0-9]*%\)/`tput setaf 5`\\1 `tput setaf 3`\\2`tput sgr0` (deflated `tput setaf 6`\\3`tput sgr0`/g"
	@echo "$(MSTART) Done.$(MEND)\n" 


lint: 
	# Check syntax errors.
	case @host_os@ in \
		cygwin*|linux*|darwin*) \
			echo "$(MSTART) Ckecking JavaScript syntax error....$(MEND)"; \
			for file in $$(/usr/bin/find $$PWD | egrep "\.js$$|\.jsm$$"); do \
				for version in 185; do \
					if [ @host_os@ = cygwin ]; then file=$$(cygpath -wa $$file); fi; \
					cd $$(dirname $(JS)) && $(JS) -C -v $$version -o strict -o werror -f $$file || exit; \
				done; \
			done; \
			;; \
	esac

clean:
	@echo "$(MSTART) Cleaning $(ESTART)$(CD)$(EEND)....$(MEND)" 
	$(RM) $(XPI)
	@echo "$(MSTART) Done.$(MEND)\n" 
	$(MAKE) -C modules $@
	$(MAKE) -C doc $@

maintainer-clean: clean
	@echo "$(MSTART) Cleaning configuration info....$(MEND)"
	$(RM) $(RM) Makefile chrome.manifest install.rdf config.status
	@echo "$(MSTART) Done.$(MEND)\n"
	$(MAKE) -C modules $@

dev:
	ln -f "$(PWD)/tools/gitignore" .gitignore	
	ln -f "$(PWD)/tools/vimprojects" .vimprojects


install-vimperator:
	@case @host_os@ in \
		cygwin*) \
			cmd /c mklink /D "$$(cygpath -w "$$(cygpath "$$USERPROFILE")/vimperator/tanasinn")" "$$(cygpath -w "$(PWD)")"; \
			ln -f "$(PWD)/modules/tanasinn-vimp.js" ~/vimperator/plugin/ \
			;; \
		*) \
			ln -sf "$(PWD)" ~/.vimperator/tanasinn; \
			ln -f "$(PWD)/modules/tanasinn-vimp.js" ~/.vimperator/plugin/ \
			;; \
	esac

uninstall-vimperator:
	@case @host_os@ in \
		cygwin*) \
			rm "$$(cygpath $$USERPROFILE)/vimperator/plugin/tanasinn-vimp.js" \
			;; \
		*) \
			rm ~/.vimperator/plugin/tanasinn-vimp.js \
			;; \
	esac \

install-extension:
	@case @host_os@ in \
		Darwin*|darwin*) \
			PROFILE_ROOT=~/Library/Application\ Support/Firefox/Profiles \
			;; \
		linux*|freebsd) \
			PROFILE_ROOT=~/.mozilla/firefox \
			;; \
		cygwin*) \
			PROFILE_ROOT="$$(cygpath "$$APPDATA\\Mozilla\\Firefox\\Profiles")" \
			;; \
	esac \
	&& PROFILES=$$(ls "$$PROFILE_ROOT") \
	&& echo $$PROFILE_ROOT \
	&& for PROFILE in $$PROFILES;  \
	do \
		case @host_os@ in \
			cygwin*) \
				case $$(cmd /c ver) in \
					*XP*) \
						cmd /c linkd \
							"$$(cygpath -w "$$PROFILE_ROOT/$$PROFILE/extensions/$(ID)")" \
							"$$(cygpath -w "$(PWD)")" \
						;; \
					*) \
						cmd /c mklink /d \
							"$$(cygpath -w "$$PROFILE_ROOT/$$PROFILE/extensions/$(ID)")" \
							"$$(cygpath -w "$(PWD)")" \
						;; \
				esac \
				;; \
			*) \
				[ -d "$$PROFILE_ROOT/$$PROFILE" ] && ln -sf $(PWD) "$$PROFILE_ROOT/$$PROFILE/extensions/$(ID)"; \
				;; \
		esac \
	done;

uninstall-extension:
	case @host_os@ in \
		Darwin|darwin*) \
			PROFILE_ROOT=~/Library/Application\ Support/Firefox/Profiles \
			;; \
		linux*|freebsd) \
			PROFILE_ROOT=~/.mozilla/firefox \
			;; \
		cygwin*) \
			PROFILE_ROOT=$$(cygpath $$APPDATA\\Mozilla\\Firefox\\Profiles) \
			;; \
	esac \
	&& PROFILES=$$(ls "$$PROFILE_ROOT") \
	&& for PROFILE in $$PROFILES;  \
	do \
		rm -f "$$PROFILE_ROOT/$$PROFILE/extensions/$(ID)"; \
	done;

run-xulapp:
	case @host_os@ in \
		Darwin|darwin*) \
			open /Applications/Aurora.app \
			-n --args --app "$(PWD)/application.ini" \
			;; \
		Linux*|freebsd) \
			firefox --app application.ini \
			;; \
		cygwin*) \
			cygstart firefox --app application.ini \
			;; \
	esac	

update-web:
	ssh zuse.jp ./build.sh

update: all
#	rm -r -f /var/www/tanasinn/*/ && rm -f /var/www/tanasinn/*
	cp tanasinn@zuse.jp.xpi /var/www/tanasinn/tanasinn-current.xpi
	cp doc/*.html /var/www/tanasinn/
	cp doc/images/*.png /var/www/tanasinn/images/

