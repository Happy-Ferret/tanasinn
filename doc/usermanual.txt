
= tanasinn terminal emurator 

#if __EN__
link:./usermanual-ja.html[日本語/Japanese]
#else
link:./usermanual.html[English/英語]
#endif

#if __EN__

== Overview

    Here is a terminal emurator that runs on Firefox.
    It enables you to access flexible, powerful functionality 
    provided by operating systems, such as commandline shells, or curses-based 
    applications.
#if 1

== Download/License
    This software is istributed under Mozilla Public License 1.1 (MPL1.1) .

- Unstable, snapshot version, http:#//zuse.jp/tanasinn/tanasinn-current.xpi[Download from here].
- git repo: http:#//zuse.jp/tanasinn.git

#endif

#else

== 概要

    "tanasinn terminal emurator" は Firefox上で動作する端末エミュレータです。
    コマンドラインシェルやcursesベースのアプリケーション等、オペレーティングシステムが提供する
    柔軟でパワフルな機能群にブラウザ上のUIからアクセスすることができます。

#if 1
== ダウンロード/ライセンス
    Mozilla Public License 1.1 (MPL1.1) で配布しています。 

- スナップショット版 http:#//zuse.jp/tanasinn/tanasinn@zuse.jp.xpi[ここからダウンロード]
- git repo: http:#//zuse.jp/tanasinn.git

#endif

#endif

#if __EN__
== Hilighting features
    - Full Gecko based user interface, it is flexible and easy to customize.
    - Multi-platform, now supports Mac / Linux (Tested in Ubuntu) / 
      Windows + http:#//www.cygwin.com[Cygwin] (requires posix python).
    - Supports plugin architecture. it supports Plug-and-Play installing & uninstalling.
    - Retaining TTY session duaring closing/restarting browser.
      you can reconnect suspended terminal session.
    - Including debugger. You can run it in step-execution-mode or trace-mode 
      and observe terminal I/O sequence in real-time.
    - IME is supported.
    - Supports east asian double width characters. 
      but it is not render bidi languages correctly.
    - Localization supported. It is using gettext-style method. you can edit localize resource on UI.
    - You can selects variable character encoding supported by Gecko.
    - Supports transparent window. it is useful when www-browseing while working at terminal.
    - xterm-like mouse emuration. supports smoothing pixel scroll.
    - Text selection / Rectangle text selection.
    - Supports copy / paste in Drag & Drop or keyboard shortcut.
    - Supports move / resize through Drag & Drop operation.
    - Supports 256 terminal colors, you can assign 32bit colors for them.
    - Vimperator / Keysnail like commandline interface.
    - Running as standalone XUL application if you want. (but now buggy!)
#else
== 特色
    - Geckoベースのユーザーインターフェース。柔軟でカスタマイズが容易です。
    - マルチプラットフォーム。現在サポートされるのは、Mac / Linux(というかUbuntu) / 
      http:#//www.cygwin.com[Cygwin] + Cygwin環境 (POSIX版Pythonが必要)
    - プラグインアーキテクチャ。プラグアンドプレイでのインストール・アンインストールが可能。
    - ブラウザを再起動したり閉じたりしている間、ターミナルセッションを保持します。
      サスペンドしたセッションに後から再接続できます。 
    - デバッガ内臓。ステップ実行やトレースができます。
      ターミナルとアプリケーションがやり取りするI/Oシーケンスをリアルタイムで観察できます。
    - IMEが使えます。
    - East Asian Width(ひらがななどの文字幅を考慮したレンダリング)に一応対応しています。 
      bidiには対応できていないと思います。
    - 地域化のサポート。gettextのようなスタイルを採用しています。
      ローカライズリソースをUI上から編集することができます。
    - Geckoがサポートする様々なエンコーディングを指定できます。
    - ウィンドウの透明化をサポート。これはブラウジングしながらターミナルで作業したい時に便利です。
    - xtermのようなマウスエミュレーションができます。ピクセルスクロールにも対応。
    - テキストの選択や矩形選択ができます。
    - ドラッグアンドドロップやキーボードショートカットによる選択テキストのコピー・ペーストが可能です。
    - ドラッグアンドドロップによる移動・リサイズができます。
    - 256色表示対応。32bitカラーをパレットに割り当てることができます。
    - VimperatorやKeysnailのようなコマンドラインインターフェース。
    - スタンドアロンのXULアプリケーションとして動作させることができます。(現在はかなりバギーです!)
#endif

#if __EN__
#else
#endif


#if __EN__
== Screenshots
#else
== スクリーンショット
#endif

#if __EN__
.Running "http:#//w3m.sourceforge.net/index.en.html[BB]", an ascii art demo program.
#else
."http:#//w3m.sourceforge.net/index.en.html[BB]"(アスキーアートのデモプログラム)を走らせたところ。
#endif
image::images/bb2.png[width=640]

#if __EN__
.Displaying color chart with http:#//code.google.com/p/myminios/source/browse/trunk/colortable16.sh?r=10[colortable.sh] and http:#//code.google.com/p/joeldotfiles/source/browse/trunk/256colors2.pl[256color2.pl].
#else
.http:#//code.google.com/p/myminios/source/browse/trunk/colortable16.sh?r=10[colortable.sh] and http:#//code.google.com/p/joeldotfiles/source/browse/trunk/256colors2.pl[256color2.pl]でカラーチャートを表示させたところ。
#endif
image::images/color2.png[width=640]

#if __EN__
.Typing Japanese with IME (here is http:#//aquaskk.sourceforge.jp/[AquaSKK]).
#else
.IMEで日本語を打ってみたところ (http:#//aquaskk.sourceforge.jp/[AquaSKK]使用)。
#endif
image::images/ime2.png[width=640]

#if __EN__
.Scrollbar interface emerges only when it is needed (like OSX Lion).
#else
.スクロールバーインターフェースは必要なときにあらわれます(OSX Lionのように)。
#endif
image::images/scroll2.png[width=640]

#if __EN__
.Overlay indicator dislays various messages. it emerges when font size / window size / titlebar message is chenged.
#else
.オーバーレイインジケータがフォントサイズ、ウィンドウサイズ、タイトルバーメッセージが変更されたときなどに表示されます。
#endif
image::images/overlay2.png[width=640]

#if __EN__
.Commandline interface inspired by http:#//vimperator.org/vimperator[Vimperator] / https:#//github.com/mooz/keysnail/wiki/[Keysnail] (here is fgcolor command).
#else
.http:#//vimperator.org/vimperator[Vimperator] や https:#//github.com/mooz/keysnail/wiki/[Keysnail] にインスパイアされたコマンドラインインターフェース。
#endif
image::images/completion2.png[width=640]

#if __EN__
.Choosing font-family.
#else
.フォントファミリを選択しています。
#endif
image::images/fontfamily2.png[width=640]

#if __EN__
.Selecting font-size.
#else
.フォントサイズを選択しています。
#endif
image::images/fontsize2.png[width=640]

#if __EN__
.Launcher interface inspired by http:#//www.blacktree.com/[QuckSilver] / https:#//addons.mozilla.org/ja/firefox/addon/mozilla-labs-ubiquity/[Ubiquity].
#else
.http:#//www.blacktree.com/[QuckSilver] や https:#//addons.mozilla.org/ja/firefox/addon/mozilla-labs-ubiquity/[Ubiquity] にインスパイアされたランチャーインターフェース。
#endif
image::images/launcher2.png[width=640]

#if __EN__
.Reconnecting a detached session. It is all OK if your browser crashes or restarting unexpectedly.
#else
.デタッチ済みのセッションに再接続しているところ。ブラウザがクラッシュしたり再起動しても安心です。
#endif
image::images/session2.png[width=640]

#if __EN__
.running "http:#//www.tkl.iis.u-tokyo.ac.jp/~toyoda/index_e.html[sl]" (a joke software).
#else
."http:#//www.tkl.iis.u-tokyo.ac.jp/~toyoda/index_e.html[sl]" (ジョークウェア)を走らせたところ。
#endif
image::images/sl2.png[width=640]

#if __EN__
.Self-Debugging and tracing terminal I/O sequence in real-time.
#else
.セルフデバッギング。ターミナルI/Oシーケンスをリアルタイムにトレースしています。
#endif
image::images/debug2.png[width=640]

#if __EN__
.Browser-in-browser. running http:#//w3m.sourceforge.net/index.en.html[w3m] (applied private patch) with inline images. How crazy!!!
#else
.ブラウザの中でブラウザ。プライベートパッチを当てたhttp:#//w3m.sourceforge.net/index.en.html[w3m]でインラインイメージを表示させました。ここまでくるとちょっと意味不明ですね。
#endif
image::images/w3m2.png[width=640]

#if __EN__
.Mailer-in-browser. running http:#//www.gohome.org/wl/index.html[Wonderlust] on emacs.
#else
.ブラウザの中でメーラー。http:#//www.gohome.org/wl/index.html[Wonderlust]をemacs上で動かしています。
#endif
image::images/wl2.png[width=640]

#if __EN__
.Developping tanasinn with tanasinn at out of jail. here is running as a standalone XUL application.
#else
.tanasinnをtanasinnで開発中。これはスタンドアロンXULアプリケーションとして動作させているところです。
#endif
image::images/xulapp.png[width=640]


#if __EN__

== Features in future...

    * Improving emuration. now emuration engine is running with xterm compatible mode. 
      but it ought to read terminfo entries.
    * Supporting color scheme. import/export color palette contains 16 or 256 colors.
    * Supporting skins. you can make it otakunized.
    * Making it to be more collaborative with curses-based applications.
      Accessing to Gecko and do something like opening popup windows, playing movies, 
      OAuth authorication, ...etc., from terminal applications. 
      We're dreaming of enjoying youtube or twitter with no plugins, from terminal, don't you?
    * Documents for plug-in developers is comming soon... - -;)

#else
== 将来的にサポートされる仕様
    
    * エミュレーションの強化。今はとりあえずxterm系コンパチブルなエミュレーションで作ってますが、
      本来はterminfoエントリを見るべきでしょう。
    * カラースキーマのサポート。16色or256色のパレットをインポート/エクスポートできるように。
    * スキンのサポート。痛端末化が可能に。
    * cursesベースのアプリーションとの連携強化。
      端末アプリケーションからGeckoにアクセスしてポップアップとか動画表示とかOAuthとかやるための仕様の策定。
      特別なプラグインを書かずとも端末からyoutube見たりtwitterやったりできるようになります。
    * プラグイン開発用ドキュメント。

#endif


#if __EN__
== Requirements
    - Firefox 4.0+.
    - Python for POSIX (Probably 2.5+, Mac, Linux, or cygwin version)
      Python for Win32, ActivePython, etc... are not well.
      because this software depends on many posix functions 
      'os.fork', 'os.openpty' ..etc.
    - Posix enviroinment. 
      If you are running Windows, you need to install cygwin at C:\cygwin.
#else
== 動作要件
    - Firefox 4.0+。
    - POSIX用にビルドされたPython (バージョンはたぶん 2.5+, Mac、 Linux、 または cygwin用のもの)。
      Python for Win32 や ActivePython 等はforkや仮想端末をサポートしないと思うのでダメしょう。
    - POSIX環境。 
      もしWindowsをお使いでしたら、C:\cygwinにCygwinをインストールしてください。
#endif

#if __EN__
== Installing
#else
== インストール
#endif

#if __EN__
=== Building Firefox extension:
.Mac, Linux, Cygwin
----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
make
----
    If build process was succeeded, target XPI file 
    "tanasinn@zuse.jp.xpi" is to be generated. enjoy it!
#else
=== Firefox拡張としてビルドする:
.Mac, Linux, Cygwin
----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
make
----
    ビルドが成功すると、"tanasinn@zuse.jp.xpi"というXPIファイルが生成されます。
    これをインストールしてください。
#endif
    
#if __EN__
=== Installing as Vimperator plugin:

    Make some links into Vimperator runtime directory as following:

.Mac, Linux
----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
ln -s $PWD $RUNTIME/tanasinn
ln $PWD/modules/tanasinn-vimp.js $RUNTIME/plugin/ 
----
        
.Cygwin
----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
$(cygpath $COMSPEC) /c mklink /D $(cygpath -w $VIMRUNTIME/tanasinn) $(cygpath -w $PWD);
ln $PWD/modules/tanasinn-vimp.js $RUNTIME/plugin/
----

    $RUNTIME is Vimperator runtime directory such as '$HOME/.vimperator'.
#else
=== Vimperatorプラグインとしてインストール:

    Vimperatorのランタイムディレクトリ以下にリンクを作成します。

.Mac, Linux
----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
ln -s $PWD $RUNTIME/tanasinn
ln $PWD/modules/tanasinn-vimp.js $RUNTIME/plugin/ 
----
        
.Cygwin
----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
$(cygpath $COMSPEC) /c mklink /D $(cygpath -w $RUNTIME/tanasinn) $(cygpath -w $PWD)
ln $PWD/modules/tanasinn-vimp.js $RUNTIME/plugin/
----

    $RUNTIMEは'$HOME/.vimperator'のようなVimperatorのランタイムディレクトリです。
#endif

=== Run as XUL Application (advanced, test version, it does not works well...):
    
.MacOSX

----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
open /Applications/Firefox.app --args --app $(PWD)/application.ini
----

.Linux

----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
firefox --app application.ini
----

.Cygwin on Windows

----
git clone http://zuse.jp/tanasinn.git
cd tanasinn
./configure
cygstart firefox.exe --app application.ini
----
    
#if __EN__
== Usage
#else
== 使いかた
#endif

#if __EN__
=== Launching terminal

==== If it Installed as Add-on: 
    Pressing control key twice (ctrl + ctrl), it shows Commandline Launcher interface.
    For example, if you type "man man[Enter key]" to this launcher textbox, 
    window-like UI emerges into browser chrome window and display manpage.  

==== If it Installed as Vimperator plugin: 

----
:tanasinn
----

    or

----
:tanasinn <command>
----

#else
=== 端末の起動
==== 拡張としてインストールした場合
    Controlキーの2度押し (ctrl + ctrl) でコマンドラインランチャーインターフェースが出現します。
    そこで例えば、"man man[Enterキー]" とタイプしてみてください。
    ウィンドウのようなUIがブラウザウィンドウ内に現れ、manページが表示されると思います。

==== Vimperatorのプラグインとしてインストールした場合: 

----
:tanasinn
----

    or

----
:tanasinn <command>
----

#endif

#if __EN__
=== basic operating procedure 

    It is similer to well-known terminal emurators, like xterm. 
    but including specific fetures as follows.
#else
=== 基本的な操作方法

    xtermのような端末エミュレータを使ったことがあれば大体いけると思いますが、
    以下のような特筆すべき仕様もいくつかあります。
#endif

#if __EN__
.shift + shift (shift key twice)

    switch input focus between terminal and commandline textbox.
#else
.shift + shift (shiftキーの2度押し)

    ターミナルとコマンドラインテキストボックスの間でフォーカスを切り替えます。
#endif

#if __EN__
.shift + mouse drag

    move window.
#else
.shift + マウスドラッグ

    ウィンドウの移動。
#endif

#if __EN__
.alt + mouse select

    select rectangle region. (like Terminal.app)
#else
.alt + マウスで範囲選択

    矩形選択。 (Terminal.appの真似)
#endif

#if __EN__
=== Using commandline interface
    
    The specification of commands is not frozen. Comming soon...
    Now the implementation of this part is witten by rush job, commandline parser 
    is not proper one.

#else
=== コマンドラインインターフェースを使う
    
    …仕様が全然固まってませんのでまだ書けません。
    この部分は作りはじめて日が浅いので、これから色々考えます。
#endif


#if __EN__
== Bug reports and patches

Patches and bug reports are are encouraged. > saitoha <user@zuse.jp>,
or toweet me (http:#//twitter.com/feel_tanasinn[English] / http:#//twitter.com/kefir_[Japanese]).
#else
== バグレポート・パッチ

.バグレポート・パッチ超歓迎。 
saitoha <user@zuse.jp> 
twitter: http:#//twitter.com/kefir_[日本語] / http:#//twitter.com/feel_tanasinn[英語] 

#endif

